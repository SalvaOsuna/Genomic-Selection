ggplot(europe_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*50), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./50, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Verde")
ggplot(europe_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*20), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./20, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Verde")
ggplot(world_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*150), stat="identity", size=.01, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./150, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Mundo", subtitle = "Guisante Verde")
load("C:/Users/Salva/Desktop/DOCTORADO NUBE/Producción científica/artículo Ann. App. Bio_2021/analisis de datos/analysis data master/Environment.RData")
library(agricolae)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
citation()
load("C:/Users/Salva/Desktop/DOCTORADO NUBE/Producción científica/artículo Ann. App. Bio_2021/analisis de datos/analysis data master/env_23-09-21.RData")
##Activarlos
{
library(agricolae)
library(ggridges)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
library(opticskxi)
library(pvclust)
library(ggbiplot)
library(ggbiplot)
library(tidyr)
library(factoextra)
}
pca.colones
ggbiplot
ggbiplot(gen.colonies,ellipse=TRUE,  labels=rownames(colonies), groups=Selection)
{
library(agricolae)
library(ggridges)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
library(opticskxi)
library(pvclust)
library(ggbiplot)
library(ggbiplot)
library(tidyr)
library(factoextra)
}
library(readxl)
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
View(R_prevariedades_parcelitas_2021)
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
rawdata <- as.data.frame(R_prevariedades_parcelitas_2021)
mixed_mod <-
gamem_met(rawdata,
env = ENV,
gen = GEN,
rep = REP,
resp = c(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, Oc/pl, BIOM, YIELD),
verbose = T,
random = "gen")
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
rawdata <- as.data.frame(R_prevariedades_parcelitas_2021)
mixed_mod <-
gamem_met(rawdata,
env = ENV,
gen = GEN,
rep = REP,
resp = c(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
verbose = T,
random = "gen")
stat_vars <-
data_ge2 %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
stat_vars <-
rawdata %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
gge_model <- gge(rawdata, ENV, GEN, YIELD)
stat_vars <-
rawdata %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
a <- plot(gge_model)
b <- plot(gge_model,
col.gen = "orange",
size.text.env = 2,
plot_theme = theme_metan(grid =  "both"))
arrange_ggplot(a, b, tag_levels = "a")
gge_model2 <- gge(rawdata, ENV, GEN, GY, svp = "GEN")
gge_model2 <- gge(rawdata, ENV, GEN, YIELD, svp = "GEN")
gge_model2 <- gge(rawdata, ENV, GEN, YIELD, svp = "genotype")
c <- plot(gge_model2, type = 2)
d <- plot(gge_model2,
type = 2,
col.gen = "black",
col.env = "red",
axis_expand = 1.5,
plot_theme = theme_metan_minimal())
arrange_ggplot(c, d, tag_levels = list(c("c", "d")))
o <- plot(gge_model, type = 8)
p <- plot(gge_model,
type = 8,
col.gen = "black",
col.env = "gray",
size.text.gen = 6,
plot_theme = theme_metan_minimal())
arrange_ggplot(o, p, tag_levels = list(c("o", "p")))
o <- plot(gge_model2, type = 8)
p <- plot(gge_model2,
type = 8,
col.gen = "black",
col.env = "gray",
size.text.gen = 6,
plot_theme = theme_metan_minimal())
arrange_ggplot(o, p, tag_levels = list(c("o", "p")))
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 65) %>% # Default is 50
mtsi(SI = 20)
plot(MTSI_index2)
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 65) %>% # Default is 50
mtsi(SI = 15)
plot(MTSI_index2)
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 50) %>% # Default is 50
mtsi(SI = 25)
plot(MTSI_index2)
mod <- gamem(rawdata,
gen = GEN,
rep = REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD))
mgidi_index <- mgidi(mod,
SI = 20,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
ideotype = c("h, l, h, l, l, l, h, h"))
mgidi_index <- mgidi(mod,
SI = 20,
ideotype = c("h, l, h, l, l, l, h, h"))
p1 <- plot(mgidi_index, SI = 20)
p2 <- plot(mgidi_index, type = "contribution")
arrange_ggplot(p1, p2)
#importar imagen
plate_1 <- image_import(("prueba_hoja.jpg"))
library(pliman)
library(EBImage)
library(dplyr)
#importar imagen
plate_1 <- image_import(("prueba_hoja.jpg"))
library(openxlsx)
library(data.table)
library(tidyverse)
library(ggstatsplot)
library(readxl)
library(hrbrthemes)
library(metan)
library(readxl)
Rust_controlled_condition <- read_excel("GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC", col_types = c("numeric",
"numeric", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "text", "numeric",
"numeric", "numeric", "numeric"))
View(Rust_controlled_condition)
df_cc <- data.frame(Rust_controlled_condition)
gen_alpha_cc <- gamem(df_cc, GEN, REP, c(AUDPC,PL50,IF), block = BLOCK)
get_model_data(gen_alpha_cc)
gen_alpha_cc2 <- gamem(df_cc, GEN, REP, c(AUDPC,PL50,IF))
get_model_data(gen_alpha_cc2)
hist(gen_alpha_cc$AUDPC$BLUPgen$Predicted)
hist(df_cc$AUDPC)
hist(gen_alpha_cc$PL50$BLUPgen$Predicted)
hist(df_cc$PL50)
hist(gen_alpha_cc$IF$BLUPgen$Predicted)
hist(df_cc$IF)
RCC_nc <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC_n",
col_types =
c("text", #REP
"text", #BLOCK
"text", #GEN
"numeric", #L_area
"numeric", #L_aphila (0 = NO aphila; 1 = SI aphila)
"numeric", #L_border (0 = Liso; 0,5 = Semi; 1 = dentado)
"numeric", #AUDPC_n
"numeric", #PL50_n
"numeric", #IF_n
"numeric", #DS_n
"numeric", #IT_n
"numeric", #AUDPC_T square root
"numeric", #PL50_T log
"numeric", #IF_T square root
"numeric", #DS_T arc.sin
"numeric",
"numeric" #MDPr
))
library(readxl)
library(openxlsx)
library(metan)
library(ggstatsplot)
library(tidyverse)
library(GGEBiplots)
library(multcompView)
RCC_nc <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC_n",
col_types =
c("text", #REP
"text", #BLOCK
"text", #GEN
"numeric", #L_area
"numeric", #L_aphila (0 = NO aphila; 1 = SI aphila)
"numeric", #L_border (0 = Liso; 0,5 = Semi; 1 = dentado)
"numeric", #AUDPC_n
"numeric", #PL50_n
"numeric", #IF_n
"numeric", #DS_n
"numeric", #IT_n
"numeric", #AUDPC_T square root
"numeric", #PL50_T log
"numeric", #IF_T square root
"numeric", #DS_T arc.sin
"numeric",
"numeric" #MDPr
))
RCC_nc$REP <- as.factor(RCC_nc$REP)
RCC_nc$BLOCK <- as.factor(RCC_nc$BLOCK)
RCC_nc$GEN <- as.factor(RCC_nc$GEN)
gen_alphaRCC <-
gamem(RCC_nc,
GEN,
REP,
resp = c("AUDPC_T", "PL50_T", "IF_T", "IT_n", "DS_T", "MDPr"),
BLOCK)
get_model_data(gen_alphaRCC)
gen_alphaRCC$MDPr$BLUPgen
hist(gen_alphaRCC$MDPr$BLUPgen$Predicted)
corr_plot(RCC_nc, c("AUDPC_T", "PL50_T", "IF_T", "DS_T", "IT_n", "MDPr"))
BLUPcc <- get_model_data(gen_alphaRCC, what = "blupg")
corr_plot(BLUPcc, c("AUDPC_T", "PL50_T", "IF_T", "DS_T", "IT_n"))
corr_plot(BLUPcc, c("AUDPC_T", "PL50_T", "IF_T", "DS_T", "IT_n", "MDPr"))
#Data distribution, final figure for the paper:
head(R_scaled)
BLUPcc
write.xlsx(BLUPcc, file = "BLUPcc.xlsx", sep = "/t")
#HERE WE GO AGAIN. NOW WITH SCALED FIELD DATA####
R_scaled <- read.xlsx("BLUPs_scaled.xlsx")
#HERE WE GO AGAIN. NOW WITH SCALED FIELD DATA####
R_scaled <- read.xlsx("BLUPs_scaled.xlsx", sheet = "Sheet 1")
setwd("~/GitHub/Genomic-Selection/Genomic Selection_SALVA")
#HERE WE GO AGAIN. NOW WITH SCALED FIELD DATA####
R_scaled <- read.xlsx("BLUPs_scaled.xlsx", sheet = "Sheet 1")
head(R_scaled)
ggplot(R_scaled, aes(x = DS))+
geom_histogram(color="black", fill="white",
binwidth = 3.5) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,60)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 3.5) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,60)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 3.5) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 1) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.1) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = DS))+
geom_histogram(color="black", fill="white",
binwidth = 3.5) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0,60)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(DS)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,0.9)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,0.95)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,88),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 6) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(10,120)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 6) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(0.1,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.06) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.04) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(0.2,1)) +
theme_classic()
ggplot(R_scaled, aes(x = MDPr))+
geom_histogram(color="black", fill="white",
binwidth = 0.05) +
geom_vline(aes(xintercept=mean(MDPr)),
color="red", linetype="dashed", size=1) +
coord_cartesian(ylim=c(0,140),
xlim = c(0.2,1)) +
theme_classic()
R_scaled
head(R_scaled)
corr_plot(R_scaled, c("R18", "R19", "R20", "AUDPC", "DS", "MDPr", "IT", "IF", "LP50", "Rust", "I_cc_FAI"))
corr_plot(R_scaled, c("R18", "R19", "R20", "AUDPC_T", "DS_T", "MDPr", "IT_T", "IF_T", "LP50_T", "RustT", "I_cc_FAI"))
mean(MDPr)
mean(R_scaled$MDPr)
metan::desc_stat(R_scaled)
metan::desc_stat(R_scaled, stats = "all")
metan::desc_stat(R_scaled, stats = "Skewness")
metan::desc_stat(R_scaled, stats = "robust")
metan::desc_stat(R_scaled, stats = "main")
ffff <- metan::desc_stat(R_scaled, stats = "all")
View(ffff)
